# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from nadiki_registrar.models.base_model_ import Model
from nadiki_registrar.models.server_time_series_config import ServerTimeSeriesConfig
from nadiki_registrar import util

from nadiki_registrar.models.server_time_series_config import ServerTimeSeriesConfig  # noqa: E501

class ServerResponseAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, time_series_config=None, boavizta_response=None, created_at=None, updated_at=None):  # noqa: E501
        """ServerResponseAllOf - a model defined in OpenAPI

        :param id: The id of this ServerResponseAllOf.  # noqa: E501
        :type id: str
        :param time_series_config: The time_series_config of this ServerResponseAllOf.  # noqa: E501
        :type time_series_config: ServerTimeSeriesConfig
        :param boavizta_response: The boavizta_response of this ServerResponseAllOf.  # noqa: E501
        :type boavizta_response: object
        :param created_at: The created_at of this ServerResponseAllOf.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this ServerResponseAllOf.  # noqa: E501
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'time_series_config': ServerTimeSeriesConfig,
            'boavizta_response': object,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'time_series_config': 'timeSeriesConfig',
            'boavizta_response': 'boavizta_response',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._time_series_config = time_series_config
        self._boavizta_response = boavizta_response
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'ServerResponseAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServerResponse_allOf of this ServerResponseAllOf.  # noqa: E501
        :rtype: ServerResponseAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ServerResponseAllOf.

        Unique server identifier (format SERVER-[FACILITY_ID]-[RACK_ID]-[SERVER_ID])  # noqa: E501

        :return: The id of this ServerResponseAllOf.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServerResponseAllOf.

        Unique server identifier (format SERVER-[FACILITY_ID]-[RACK_ID]-[SERVER_ID])  # noqa: E501

        :param id: The id of this ServerResponseAllOf.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def time_series_config(self):
        """Gets the time_series_config of this ServerResponseAllOf.


        :return: The time_series_config of this ServerResponseAllOf.
        :rtype: ServerTimeSeriesConfig
        """
        return self._time_series_config

    @time_series_config.setter
    def time_series_config(self, time_series_config):
        """Sets the time_series_config of this ServerResponseAllOf.


        :param time_series_config: The time_series_config of this ServerResponseAllOf.
        :type time_series_config: ServerTimeSeriesConfig
        """
        if time_series_config is None:
            raise ValueError("Invalid value for `time_series_config`, must not be `None`")  # noqa: E501

        self._time_series_config = time_series_config

    @property
    def boavizta_response(self):
        """Gets the boavizta_response of this ServerResponseAllOf.


        :return: The boavizta_response of this ServerResponseAllOf.
        :rtype: object
        """
        return self._boavizta_response

    @boavizta_response.setter
    def boavizta_response(self, boavizta_response):
        """Sets the boavizta_response of this ServerResponseAllOf.


        :param boavizta_response: The boavizta_response of this ServerResponseAllOf.
        :type boavizta_response: object
        """

        self._boavizta_response = boavizta_response

    @property
    def created_at(self):
        """Gets the created_at of this ServerResponseAllOf.


        :return: The created_at of this ServerResponseAllOf.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ServerResponseAllOf.


        :param created_at: The created_at of this ServerResponseAllOf.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ServerResponseAllOf.


        :return: The updated_at of this ServerResponseAllOf.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ServerResponseAllOf.


        :param updated_at: The updated_at of this ServerResponseAllOf.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
